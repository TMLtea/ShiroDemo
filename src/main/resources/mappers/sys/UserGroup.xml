<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hrh.module.sys.dao.jpas.UserGroupMapper">

    <sql id="table_name">sys_user_group</sql>

    <sql id="all_entity_columns">
		${prefix}.id,
		${prefix}.`group_name`,
		${prefix}.type,
		${prefix}.create_time,
		${prefix}.description,
		${prefix}.`status`
	</sql>

    <resultMap id="UserGroupWithUsers" type="UserGroup">
        <id column="id" property="id"/>
        <collection property="users" column="id" select="com.example.hrh.module.sys.dao.jpas.UserEntityMapper.findByGroupId"/>
    </resultMap>

    <resultMap id="UserGroupWithRoles" type="UserGroup">
        <id column="id" property="id"/>
        <collection property="roles" column="id" select="com.example.hrh.module.sys.dao.jpas.RoleMapper.findByGroupId"/>
    </resultMap>

    <select id="findAllByStatus" parameterType="integer" resultType="UserGroup">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        <where>
            <choose>
                <when test="status != null">
                    a.`status` = #{status}
                </when>
            </choose>
        </where>
    </select>

    <select id="findOne" resultType="UserGroup" parameterType="long">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.id = #{id}
    </select>

    <select id="findOneWithRoles" parameterType="long" resultMap="UserGroupWithRoles">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.id = #{id}
        AND a.`status` = 1
    </select>

    <select id="findUserGroupWithUsers" parameterType="long" resultMap="UserGroupWithUsers">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.id = #{id}
        AND a.`status` = 1
    </select>

    <select id="countUserByGroupId" resultType="int" parameterType="long">
        SELECT count(DISTINCT user_id) FROM sys_user_user_group WHERE user_group_id = #{id};
    </select>

    <select id="findByUserId" resultType="UserGroup" parameterType="long">
        SELECT
            <include refid="all_entity_columns">
                <property name="prefix" value="b"/>
            </include>
        FROM
            sys_user_user_group a
        INNER JOIN sys_user_group b ON a.user_group_id = b.id
        WHERE
            user_id = #{userId}
    </select>

    <insert id="save" parameterType="UserGroup" keyProperty="id" useGeneratedKeys="true">
        INSERT
        <include refid="table_name"/>
        (
        `group_name`,
        `type`,
        create_time,
        description,
        `status`
        )
        VALUES (
        #{groupName},
        #{type},
        #{createTime},
        #{description},
        #{status}
        )
    </insert>

    <update id="updateStatus">
        UPDATE
        <include refid="table_name"/>
        SET
        `status` = #{status}
        WHERE
        id = #{id}
    </update>

    <update id="update" parameterType="UserGroup">
        UPDATE
        <include refid="table_name"/>
        SET
        `group_name` = #{groupName},
        description = #{description},
        `type` = #{type}
        WHERE
        id = #{id}
    </update>

    <insert id="associateRoles">
        INSERT sys_role_user_group
        (user_group_id,role_id)
        VALUES
        <foreach collection="idSet" item="roleId" separator=",">
            (#{id},#{roleId})
        </foreach>
    </insert>

    <delete id="removeRoles" parameterType="long">
		DELETE FROM sys_role_user_group WHERE user_group_id = #{id}
	</delete>


    <insert id="associateUsers">
        INSERT sys_user_user_group
        (user_id, user_group_id)
        VALUES
        <foreach collection="userIds" item="userId" separator=",">
            (
            #{userId},
            #{groupId}
            )
        </foreach>
    </insert>

    <delete id="removeUsers" parameterType="long">
		DELETE FROM sys_user_user_group WHERE user_group_id = #{id}
	</delete>

    <delete id="removeAssociateUsers">
        DELETE FROM sys_user_user_group WHERE user_group_id = #{id} AND user_id
        <foreach collection="idSet"  item="userId" open=" IN (" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>



</mapper>