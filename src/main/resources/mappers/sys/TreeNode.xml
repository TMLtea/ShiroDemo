<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hrh.module.sys.dao.jpas.TreeNodeMapper">

    <sql id="table_name">sys_tree_node</sql>

    <sql id="all_entity_columns">
		${prefix}.id,
		${prefix}.entity_name,
		${prefix}.entity_id,
		${prefix}.entity_key,
		${prefix}.parent_id,
		${prefix}.parent_entity_id,
		${prefix}.create_time,
		${prefix}.sort,
		${prefix}.`status`
	</sql>

    <resultMap id="ParentNodeMap" type="TreeNode">
        <id column="id" property="id"/>
        <collection property="subTreeNodes" column="{parentEntityId=entity_id,entityKey=entityKey}" select="com.example.hrh.module.sys.dao.jpas.TreeNodeMapper.findByParentEntityId"/>
    </resultMap>

    <sql id="one_entity">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.id = #{id}
        AND entity_key = #{entityKey}
    </sql>

    <select id="findByTypeAndStatus" resultType="TreeNode">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        entity_key = #{entityKey}
        <choose>
            <when test="status != null">
                AND `status` = #{status}
            </when>
        </choose>
    </select>

    <select id="findParentNode" resultMap="ParentNodeMap">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        ,#{entityKey} entityKey
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.entity_id = #{entityId}
        AND entity_key = #{entityKey}
    </select>

    <select id="findByParentEntityId" resultType="TreeNode">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.parent_entity_id = #{parentEntityId}
        AND entity_key = #{entityKey}
    </select>

    <select id="findByEntityId" resultType="TreeNode">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        a.entity_id = #{entityId}
        AND entity_key = #{entityKey}
    </select>

    <insert id="save" parameterType="TreeNode" keyProperty="id" useGeneratedKeys="true">
        INSERT
        <include refid="table_name"/>
        (
        entity_name,
        entity_id,
        entity_key,
        parent_id,
        parent_entity_id,
        create_time,
        sort,
        `status`
        )
        VALUES (
        #{entityName},
        #{entityId},
        #{entityKey},
        #{parentId},
        #{parentEntityId},
        #{createTime},
        #{sort},
        #{status}
        )
    </insert>

    <insert id="saveBatch" parameterType="TreeNode" keyProperty="id" useGeneratedKeys="true">
        INSERT
        <include refid="table_name"/>
        (
        entity_name,
        entity_id,
        entity_key,
        parent_id,
        parent_entity_id,
        create_time,
        sort,
        `status`
        )
        VALUES
        <foreach collection="collections" item="item" separator=",">
            (
            #{item.entityName},
            #{item.entityId},
            #{item.entityKey},
            #{item.parentId},
            #{item.parentEntityId},
            #{item.createTime},
            #{item.sort},
            #{item.status}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="TreeNode">
        UPDATE  <include refid="table_name"/>
        SET
            entity_name = #{entityName},
            entity_id = #{entityId},
            entity_key = #{entityKey},
            parent_id =  #{parentId},
            parent_entity_id = #{parentEntityId},
            sort = #{sort}
        WHERE
          id = #{id}
    </update>

    <update id="updateStatusByType">
        UPDATE
        <include refid="table_name"/>
        SET
        `status` = #{status}
        WHERE
        entity_id = #{entityId}
        AND entity_key = #{entityKey}
    </update>

    <update id="updateSortList">
        <foreach collection="entityList" item="item">
          UPDATE <include refid="table_name"/> SET sort = #{item.sort} WHERE id = #{item.id} ;
        </foreach>
    </update>
</mapper>